@property --x {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --c {
  syntax: "<color>";
  inherits: false;
  initial-value: rgb(102, 0, 255);
}

.GameBoard {
  display: flex;
  align-items: center;
  justify-content: center;

  &:has(.Card) {
    background: #f7f8fc;
    background: radial-gradient(closest-side, var(--c) var(--x), transparent);
  }

  &:has(.Card.truth.for-current-player.active:hover) {
    animation: radialBackgroundChange-1 0.4s;
    animation-fill-mode: forwards;
  }

  &:has(.Card.dare.for-current-player.active:hover) {
    animation: radialBackgroundChange-2 0.4s;
    animation-fill-mode: forwards;
  }

  &:has(.Card.for-current-player.truth.choosen) {
    --x: 20%;
    --c: rgb(17, 208, 163);
  }

  .Card {
    color: rgba($color: #fff, $alpha: 0.8);

    display: flex;
    justify-content: center;
    align-items: center;

    border-radius: 16px;
    width: 25vw;
    height: 37.5vw;
    max-width: 420px;
    max-height: 630px;
    background-color: rgba($color: #fff, $alpha: 0.1);
    border: 2px solid rgba($color: #fff, $alpha: 0.2);
    backdrop-filter: blur(16px);

    transition: all 0.4s ease-out;

    .Body-1 {
      text-align: center;
      width: 80%;
    }

    &.truth {
      transform: rotateZ(-15deg);

      &.choosen + .Card.dare.for-current-player {
      }
    }

    &.dare {
      transform: rotateZ(15deg);
    }

    &.for-current-player {
      background-color: rgba($color: #6600ff, $alpha: 0.4);
      border: 2px solid rgba($color: #6600ff, $alpha: 0.6);

      &.active {
        cursor: pointer;
        color: #fff;

        &.truth:hover {
          z-index: 1;
          background-color: rgba($color: #11d0a3, $alpha: 0.6);
          border: 2px solid rgba($color: #11d0a3, $alpha: 0.8);
          transform: rotateZ(-10deg) scale(1.1);
        }

        &.dare:hover {
          z-index: 1;
          background-color: rgba($color: #df5c4a, $alpha: 0.6);
          border: 2px solid rgba($color: #df5c4a, $alpha: 0.8);
          transform: rotateZ(10deg) scale(1.1);
        }
      }

      &.choosen {
        &.truth {
          background-color: rgba($color: #11d0a3, $alpha: 0.6);
          border: 2px solid rgba($color: #11d0a3, $alpha: 0.8);

          & + .Card.dare.for-current-player {
            cursor: pointer;
            transform: translateX(50%) rotateZ(15deg);

            &:hover {
              transform: translateX(80%) rotateZ(20deg);
              background-color: rgba($color: #6600ff, $alpha: 0.6);
              border: 2px solid rgba($color: #6600ff, $alpha: 0.8);
            }
          }
        }
      }
    }

    &.for-spectator {
      &.choosen {
      }
    }

    &.choosen {
      position: absolute;
      transform: rotateZ(0) scale(1.1);
      z-index: 1;
    }
  }
}

@keyframes radialBackgroundChange-1 {
  0% {
    --x: 0%;
    --c: rgb(102, 0, 255);
  }
  100% {
    --x: 20%;
    --c: rgb(17, 208, 163);
  }
}

@keyframes radialBackgroundChange-2 {
  0% {
    --x: 0%;
    --c: rgb(102, 0, 255);
  }
  100% {
    --x: 20%;
    --c: rgb(223, 92, 74);
  }
}

/*

&.true {
      
    }

    &.dare {
      transform: rotateZ(15deg);
    }
    
*/
